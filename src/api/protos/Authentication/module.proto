syntax = "proto3";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";
import "protos/infrastructure.proto";

option csharp_namespace = "Soit.Authentication.Protos";

package Soit.Authentication;

message CreateModuleRequest {
  google.protobuf.Int64Value parent_id = 1;
  string name = 2;
  int32 no = 3;
  string style = 4;
  string icon = 5;
  string route = 6;
  bool show_in_menu = 7;
}

message FindModuleReply {
  int64 id = 1;
  Soit.Infrastructure.NamedIdentify parent = 2;
  string name = 3;
  int32 no = 4;
  string style = 5;
  string icon = 6;
  string route = 7;
  bool show_in_menu = 8;
  message Page {
    int64 id = 1;
    string key = 2;
    string name = 3;
    int32 no = 4;
    string icon = 5;
    string route = 6;
    bool show_in_menu = 7;
  }
  repeated Page pages = 9;
}

message GetModuleTreeReply {
  repeated ModuleTreeNode nodes = 1;
}

message ModuleTreeNode {
  int64 id = 1;
  Soit.Infrastructure.NamedIdentify parent = 2;
  string name = 3;
  int32 no = 4;
  string style = 5;
  string icon = 6;
  string route = 7;
  bool show_in_menu = 8;
  repeated ModuleTreeNode children = 9;
  message Page {
    int64 id = 1;
    string key = 2;
    string name = 3;
    int32 no = 4;
    string icon = 5;
    string route = 6;
    bool show_in_menu = 7;
  }  
  repeated Page pages = 10;
}

message UpdateModuleRequest {
  int64 id = 1;
  google.protobuf.Int64Value parent_id = 2;
  string name = 3;
  int32 no = 4;
  string style = 5;
  string icon = 6;
  string route = 7;
  bool show_in_menu = 8;
}

service ModuleService {
  rpc Create(CreateModuleRequest) returns (Soit.Infrastructure.Identify){
    option (google.api.http) = {
      put: "/modules",
      body: "*"
    };
  }

  rpc Find(Soit.Infrastructure.Identify) returns (FindModuleReply){
    option (google.api.http) = {
      get: "/modules/{id}"
    };
  }

  rpc GetTree(google.protobuf.Empty) returns (GetModuleTreeReply){
    option (google.api.http) = {
      get: "/modules"
    };
  }

  rpc Remove(Soit.Infrastructure.IdentifyArray) returns (google.protobuf.Empty){
    option (google.api.http) = {
      delete: "/modules",
      body: "*"
    };
  }

  rpc Update(UpdateModuleRequest) returns (google.protobuf.Empty){
    option (google.api.http) = {
      patch: "/modules",
      body: "*"
    };
  }
}
